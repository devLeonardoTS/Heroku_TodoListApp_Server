// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserAccount {
  username String @id @db.VarChar(50)
  
  password String @db.VarChar(100)

  role UserRole @default(USER)
  
  createdAt DateTime @db.Timestamptz(0) @default(now())
  updatedAt DateTime @db.Timestamptz(0) @default(now())
  lastLogin DateTime @db.Timestamptz(0) @default(now())

  UserProfile UserProfile?
}

model UserProfile {
  id String @id @default(uuid())
  nickname String @db.VarChar(50)
  photoId String @db.VarChar(255) @default("default_user_profile_photo.png")
  message String? @db.VarChar(255)
  updatedAt DateTime @db.Timestamptz(0) @default(now())

  ownerUsername String @db.VarChar(50)
  UserAccount UserAccount @relation(fields: [ownerUsername], references: [username])

  Tasks Task[]
  ApplicationReview ApplicationReview?
}

model Task {
  id String @id @default(uuid())
  
  description String @db.VarChar(255)
  status TaskStatus @default(TODO)
  createdAt DateTime @db.Timestamptz(0) @default(now())
  updatedAt DateTime @db.Timestamptz(0) @default(now())
  completedAt DateTime? @db.Timestamptz(0) 

  creatorProfileId String
  UserProfile UserProfile @relation(fields: [creatorProfileId], references: [id])
}

model ApplicationReview {
  id String @id @default(uuid())

  commentary String @db.VarChar(255)
  rate Int @db.SmallInt

  createdAt DateTime @db.Timestamptz(0) @default(now())
  updatedAt DateTime @db.Timestamptz(0) @default(now())

  active Boolean @db.Boolean @default(true)

  creatorProfileId String
  UserProfile UserProfile @relation(fields: [creatorProfileId], references: [id])
}

enum UserRole {
  ADMIN
  EMPLOYEE
  USER
  PREMIUM_USER
}

enum TaskStatus {
  TODO
  STARTED
  STRUGGLING
  DONE
}