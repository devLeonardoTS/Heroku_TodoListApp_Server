# ROUTES #

/api/users/login:
  post:
    tags: ["TodoList API - PUBLIC END-POINTS"]
    description: Use this end-point to authenticate your user.
    security: []
    requestBody:
      required: true
      content:
        'application/json':
          schema:
            '$ref': '#/components/schemas/UserAuthenticationModel'
    responses:
      200: 
        description: A successful response.
        content: 
          'application/json':
            schema:
              '$ref': '#/components/schemas/AuthenticatedUserResponse'
      400:
        description: A bad request response.
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/FieldValidationErrorResponse"
      401:
        description: An unauthorized request response.
        content:
          'application/json':
            schema: 
              type: object
              properties:
                userAuthenticationErrorExample:
                  type: object
                  $ref: "#/components/schemas/UserAuthenticationErrorResponse"
              examples:
                userAuthenticationErrorExample:
                  $ref: "#/components/schemas/UserAuthenticationErrorResponse/example"
      404:
        description: The resource was not found.
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/NotFoundErrorResponse"
      500:
        description: An unexpected error. If you receive this, contact the administrator.
        content:
          'application/json':
            schema: 
              type: object
              properties:
                unexpectedErrorExample:
                  type: object
                  $ref: "#/components/schemas/UnexpectedErrorResponse"
                databaseErrorExample:
                  type: object
                  $ref: "#/components/schemas/DatabaseErrorResponse"
                validatorErrorExample:
                  type: object
                  $ref: "#/components/schemas/ValidatorErrorResponse"
              examples:
                unexpectedErrorExample: 
                  $ref: "#/components/schemas/UnexpectedErrorResponse/example"
                databaseErrorExample:
                  $ref: "#/components/schemas/DatabaseErrorResponse/example"
                validatorErrorExample:
                  $ref: "#/components/schemas/ValidatorErrorResponse/example"

/api/users/login/renew:
  post:
    tags: ["TodoList API - PUBLIC END-POINTS"]
    description: Use this end-point to renew your user's access token.
    security: []
    requestBody:
      required: true
      content:
        'application/json':
          schema:
            '$ref': '#/components/schemas/UserAuthenticationRenewModel'
    responses:
      200: 
        description: A successful response.
        content: 
          'application/json':
            schema:
              '$ref': '#/components/schemas/AuthenticatedUserResponse'
      400:
        description: A bad request response.
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/FieldValidationErrorResponse"
      401:
        description: An unauthorized request response.
        content:
          'application/json':
            schema: 
              type: object
              properties:
                userAuthenticationErrorExample:
                  type: object
                  $ref: "#/components/schemas/UserAuthenticationErrorResponse"
              examples:
                userAuthenticationErrorExample:
                  $ref: "#/components/schemas/UserAuthenticationErrorResponse/example"
      404:
        description: The resource was not found.
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/NotFoundErrorResponse"
      500:
        description: An unexpected error. If you receive this, contact the administrator.
        content:
          'application/json':
            schema: 
              type: object
              properties:
                unexpectedErrorExample:
                  type: object
                  $ref: "#/components/schemas/UnexpectedErrorResponse"
                databaseErrorExample:
                  type: object
                  $ref: "#/components/schemas/DatabaseErrorResponse"
                validatorErrorExample:
                  type: object
                  $ref: "#/components/schemas/ValidatorErrorResponse"
              examples:
                unexpectedErrorExample: 
                  $ref: "#/components/schemas/UnexpectedErrorResponse/example"
                databaseErrorExample:
                  $ref: "#/components/schemas/DatabaseErrorResponse/example"
                validatorErrorExample:
                  $ref: "#/components/schemas/ValidatorErrorResponse/example"

# COMPONENTS/SCHEMAS #

components:
  schemas:

    # MODELS #

    UserAuthenticationModel:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
      example:
        username: MeuUsernameSuperUnico
        password: M1nh4S3nh4S3gur4_1337

    UserAuthenticationRenewModel:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken
        - password
      example:
        refreshToken: 76d2666a-e0ba-40cd-8b82-c1b7c446a2e7

    # DISPLAYABLES # 

    DisplayableAuthenticatedUserAccountData:
      type: object
      properties:
        uid:
          type: string
        username:
          type: string
        role:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        lastLogin:
          type: string
      example:
        uid: bb7306a5-ab5a-4485-9e40-87b94c066288
        username: MeuUsernameSuperUnico
        role: USER
        createdAt: Thu Jan 06 2022 10:26:28 GMT-0300 (GMT-03:00)
        updatedAt: Thu Jan 06 2022 10:26:28 GMT-0300 (GMT-03:00)
        lastLogin: Thu Jan 08 2022 16:20:15 GMT-0300 (GMT-03:00)

    # SUCCESSFUL RESPONSES #

    AuthenticatedUserResponse:
      type: object
      properties:
        message:
          type: string
        accessTokenType:
          type: string
        accessToken:
          type: string
        refreshToken:
          type: string
        user:
          type: object
          '$ref': "#/components/schemas/DisplayableAuthenticatedUserAccountData"
      example:
        message: User successfully authenticated!
        accessTokenType: bearer
        accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyVWlkIjoiMWVlZTQzNmEtNWVjOC00MDEyLTg1OWMtNjQxZjExMmFkYmYyIiwidXNlclJvbGUiOiJVU0VSIiwiaWF0IjoxNjQyNjYzNzU1LCJleHAiOjE2NDI2NjM5MzUsInN1YiI6IjFlZWU0MzZhLTVlYzgtNDAxMi04NTljLTY0MWYxMTJhZGJmMiJ9.MUoOwe3RAvV9JQLkwc0K1JR5t1VkictLxvxU6dRd5vU
        refreshToken: d9e7e49a-73ef-4022-b5fd-5ca2a5a01d92
        user: 
          uid: bb7306a5-ab5a-4485-9e40-87b94c066288
          username: MeuUsernameSuperUnico
          role: USER
          createdAt: Thu Jan 06 2022 10:26:28 GMT-0300 (GMT-03:00)
          updatedAt: Thu Jan 06 2022 10:26:28 GMT-0300 (GMT-03:00)
          lastLogin: Thu Jan 08 2022 16:20:15 GMT-0300 (GMT-03:00)